--1-1
CREATE TABLE TB_MEMBER(
    MEM_NO NUMBER PRIMARY KEY,
    MEM_ID VARCHAR2(30) NOT NULL UNIQUE,
    MEM_PWD VARCHAR2(30) NOT NULL,
    MEM_NAME VARCHAR2(20) NOT NULL,
    MEM_ADDR VARCHAR2(50),
    MEM_GEN CHAR(1) CHECK (MEM_GEN IN ( 'M', 'F' )),
    ENROLL_DATE  DATE DEFAULT SYSDATE NOT NULL,
    MODIFIY_DATE DATE DEFAULT SYSDATE NOT NULL,
    WITHDRAWAL_DATE DATE,
    ADMIN_YN CHAR(1) DEFAULT 'N' CHECK (ADMIN_YN IN ( 'Y', 'N' )) NOT NULL 
);


--1-2
CREATE TABLE TB_PRODUCT(
    PRO_CODE VARCHAR2(10) PRIMARY KEY, --상품코드
    PRO_NAME VARCHAR2(30) NOT NULL, --상품명
    PRO_BRAND VARCHAR2(20) NOT NULL, --브랜드명
    PRO_PRICE NUMBER,  --상품가격
    PRO_STOCK NUMBER, --상품재고수량
    CATEGORY VARCHAR2(20) DEFAULT '기타' CHECK(CATEGORY IN ('의류', '신발', '잡화', '생활용품', '기타')) NOT NULL , --상품카테고리
    REGIST_DATE DATE DEFAULT SYSDATE NOT NULL --등록일
);


--1-3
CREATE TABLE TB_OPTION(
    OPT_CODE VARCHAR2(10) PRIMARY KEY, --옵션코드
    OPT_NAME VARCHAR2(30) NOT NULL, --옵션명
    OPT_PRICE NUMBER,  --옵션가격
    OPT_STOCK NUMBER DEFAULT 0, --상품재고수량
    REGIST_DATE DATE DEFAULT SYSDATE NOT NULL, --옵션등록일
    REF_PRO_CODE VARCHAR2(10) REFERENCES TB_PRODUCT NOT NULL --참조하는 상품코드
);


--1-4
CREATE TABLE TB_LIKE(
    MEM_NO NUMBER REFERENCES TB_MEMBER,
    PRO_CODE VARCHAR2(10) REFERENCES TB_PRODUCT,
    LIKE_DATE DATE NOT NULL,
    PRIMARY KEY (MEM_NO, PRO_CODE)
);


--1-5
CREATE TABLE TB_REVIEW(
    REVIEW_NO NUMBER PRIMARY KEY,
    REVIEW_CONTENT  VARCHAR2(4000) NOT NULL,
    RATING NUMBER DEFAULT 5 NOT NULL CHECK (RATING BETWEEN 1 AND 5), --리뷰평점
    REGIST_DATE DATE DEFAULT SYSDATE NOT NULL,
    MEM_NO NUMBER REFERENCES TB_MEMBER NOT NULL,
    PRO_CODE VARCHAR2(10) REFERENCES TB_PRODUCT NOT NULL
);


---------------------------------------------------------
--2-1
CREATE SEQUENCE SEQ_MEM 
START WITH 3000
INCREMENT BY 1;

--2-2
CREATE SEQUENCE SEQ_PRO
START WITH 1
INCREMENT BY 1
MAXVALUE 999;

--2-3
CREATE SEQUENCE SEQ_OPT
START WITH 1
INCREMENT BY 1
MAXVALUE 999;

--2-4
CREATE SEQUENCE SEQ_REV
START WITH 1
INCREMENT BY 1;

SELECT * FROM USER_SEQUENCES;


---------------------------------------------------------
--3-1
INSERT INTO TB_MEMBER VALUES(30000, 'admin', '1234', '관리자', NULL, NULL, SYSDATE , SYSDATE, NULL, 'Y');
INSERT INTO TB_MEMBER VALUES(30001, 'user01', 'pass01', '강길동', '서울시 양천구', 'M', SYSDATE , SYSDATE, NULL, 'N');
INSERT INTO TB_MEMBER VALUES(30002, 'user02', 'pass02', '김개화', '서울시 송파구', 'F', SYSDATE , SYSDATE, NULL, 'N');
INSERT INTO TB_MEMBER VALUES(30003, 'user03', 'pass03', '강현수', '서울시 강동구', 'M', SYSDATE , SYSDATE, NULL, 'N');


--3-2
INSERT INTO TB_PRODUCT VALUES('PRO_001', '샤랄라바지', 'NAIN', 25000, 10, '의류', SYSDATE);
INSERT INTO TB_PRODUCT VALUES('PRO_002', '볼펜', '모나미', NULL, NULL, '생활용품', SYSDATE);
INSERT INTO TB_PRODUCT VALUES('PRO_003', '마우스', '로지텍', NULL, NULL, '잡화', SYSDATE);


--3-3
INSERT INTO TB_OPTION VALUES('PRO_001', '검정색', 700, 150, SYSDATE, 'PRO_002');
INSERT INTO TB_OPTION VALUES('PRO_002', '빨간색', 1000, 200, SYSDATE, 'PRO_002');
INSERT INTO TB_OPTION VALUES('PRO_003', 'MX MASTER 3', 90000, 3, SYSDATE, 'PRO_003');
INSERT INTO TB_OPTION VALUES('PRO_004', 'G304', 15000, 2, SYSDATE, 'PRO_003');


--3-4
INSERT INTO TB_LIKE VALUES(30001, 'PRO_003', SYSDATE);
INSERT INTO TB_LIKE VALUES(30002, 'PRO_001', SYSDATE);
INSERT INTO TB_LIKE VALUES(30001, 'PRO_001', SYSDATE);
INSERT INTO TB_LIKE VALUES(30003, 'PRO_002', SYSDATE);


--3-4
INSERT INTO TB_REVIEW VALUES(1, '상품 설명처럼 너무 샤랄라하니 이쁘네요~! 잘 입겠습니다~~', 5, SYSDATE, 30002, 'PRO_001');
INSERT INTO TB_REVIEW VALUES(2, '역시 볼펜은 모나미! 근데 잘 안나와요...재구매 의사 없습니다.', 2, SYSDATE, 30003, 'PRO_002');
INSERT INTO TB_REVIEW VALUES(3, '마우스는 로지텍만 한게 없죠 MX MASTER 너무 좋네요', 4, SYSDATE, 30001, 'PRO_003');


-----------------------------
--4-1 30001번 회원이 찜한 상품들의 상품코드, 상품명, 브랜드명, 상품가격 조회 
SELECT PRO_CODE, PRO_NAME,  PRO_BRAND, PRO_PRICE
FROM TB_PRODUCT 
JOIN TB_LIKE USING (PRO_CODE)
WHERE MEM_NO = 30001;


--4-2 PRO_001 상품에 대해 찜한 횟수 조회  
SELECT COUNT(PRO_CODE)
FROM TB_LIKE
GROUP BY PRO_CODE;


--4-3 전체 리뷰들의 리뷰번호, 리뷰내용, 평점, 상품명, 작성자회원아이디, 작성일(XXXX-XX-XX형식) 조회 
-- 단, 리뷰번호 내림차순으로 정렬하여 최신글이 먼저 조회되도록 하시오
SELECT R.REVIEW_NO"리뷰번호", R.REVIEW_CONTENT"리뷰내용", R.RATING"평점", P.PRO_NAME"상품명", M.MEM_ID"작성자회원아이디", TO_CHAR(R.REGIST_DATE, 'YYYY-MM-DD')"작성일"
FROM TB_REVIEW R
JOIN TB_MEMBER M ON (M.MEM_NO = R.MEM_NO)
JOIN TB_PRODUCT P ON (R.PRO_CODE = P.PRO_CODE)
ORDER BY REVIEW_NO DESC;


--4-4 PRO_003 상품의 리뷰 평균 평점을 조회 
--단, 무조건 소수점 아래 한자리까지 표현될 수 있도록 하시오 (예를 들어 평균평점이 4일때도 4.0으로 조회될 수 있도록)
SELECT  TO_CHAR(ROUND(AVG(RATING), 1), '9.9')"평균평점"
FROM (
            SELECT  PRO_CODE, RATING
            FROM TB_REVIEW
            WHERE PRO_CODE = 'PRO_003'
            )
GROUP BY PRO_CODE;


--4-5 전체 상품들 조회시 상품명, 상품브랜드, 상품가격, 해당 상품의 찜횟수, 해당 상품의 평균리뷰평점(소수점 아래 한자리까지 무조건 나오도록) 조회
SELECT P.PRO_NAME"상품명", P.PRO_BRAND"상품브랜드", P.PRO_PRICE"상품가격" , COUNT(L.PRO_CODE)"찜횟수", TO_CHAR(ROUND(AVG(RATING), 1), '9.9')"평균평점"
FROM TB_PRODUCT P
JOIN TB_LIKE L ON (L.PRO_CODE = P.PRO_CODE)
JOIN  TB_REVIEW R ON (R.PRO_CODE = P.PRO_CODE)
GROUP BY P.PRO_CODE, P.PRO_NAME, P.PRO_BRAND, P.PRO_PRICE;
